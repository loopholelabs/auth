/*
	Copyright 2023 Loophole Labs

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

		   http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
*/

// Code generated by ent, DO NOT EDIT.

package magicflow

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/loopholelabs/auth/internal/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldEQ(FieldCreatedAt, v))
}

// Email applies equality check predicate on the "email" field. It's identical to EmailEQ.
func Email(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldEQ(FieldEmail, v))
}

// IPAddress applies equality check predicate on the "ip_address" field. It's identical to IPAddressEQ.
func IPAddress(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldEQ(FieldIPAddress, v))
}

// Secret applies equality check predicate on the "secret" field. It's identical to SecretEQ.
func Secret(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldEQ(FieldSecret, v))
}

// NextURL applies equality check predicate on the "next_url" field. It's identical to NextURLEQ.
func NextURL(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldEQ(FieldNextURL, v))
}

// Organization applies equality check predicate on the "organization" field. It's identical to OrganizationEQ.
func Organization(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldEQ(FieldOrganization, v))
}

// DeviceIdentifier applies equality check predicate on the "device_identifier" field. It's identical to DeviceIdentifierEQ.
func DeviceIdentifier(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldEQ(FieldDeviceIdentifier, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldLTE(FieldCreatedAt, v))
}

// EmailEQ applies the EQ predicate on the "email" field.
func EmailEQ(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldEQ(FieldEmail, v))
}

// EmailNEQ applies the NEQ predicate on the "email" field.
func EmailNEQ(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldNEQ(FieldEmail, v))
}

// EmailIn applies the In predicate on the "email" field.
func EmailIn(vs ...string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldIn(FieldEmail, vs...))
}

// EmailNotIn applies the NotIn predicate on the "email" field.
func EmailNotIn(vs ...string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldNotIn(FieldEmail, vs...))
}

// EmailGT applies the GT predicate on the "email" field.
func EmailGT(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldGT(FieldEmail, v))
}

// EmailGTE applies the GTE predicate on the "email" field.
func EmailGTE(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldGTE(FieldEmail, v))
}

// EmailLT applies the LT predicate on the "email" field.
func EmailLT(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldLT(FieldEmail, v))
}

// EmailLTE applies the LTE predicate on the "email" field.
func EmailLTE(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldLTE(FieldEmail, v))
}

// EmailContains applies the Contains predicate on the "email" field.
func EmailContains(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldContains(FieldEmail, v))
}

// EmailHasPrefix applies the HasPrefix predicate on the "email" field.
func EmailHasPrefix(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldHasPrefix(FieldEmail, v))
}

// EmailHasSuffix applies the HasSuffix predicate on the "email" field.
func EmailHasSuffix(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldHasSuffix(FieldEmail, v))
}

// EmailEqualFold applies the EqualFold predicate on the "email" field.
func EmailEqualFold(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldEqualFold(FieldEmail, v))
}

// EmailContainsFold applies the ContainsFold predicate on the "email" field.
func EmailContainsFold(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldContainsFold(FieldEmail, v))
}

// IPAddressEQ applies the EQ predicate on the "ip_address" field.
func IPAddressEQ(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldEQ(FieldIPAddress, v))
}

// IPAddressNEQ applies the NEQ predicate on the "ip_address" field.
func IPAddressNEQ(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldNEQ(FieldIPAddress, v))
}

// IPAddressIn applies the In predicate on the "ip_address" field.
func IPAddressIn(vs ...string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldIn(FieldIPAddress, vs...))
}

// IPAddressNotIn applies the NotIn predicate on the "ip_address" field.
func IPAddressNotIn(vs ...string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldNotIn(FieldIPAddress, vs...))
}

// IPAddressGT applies the GT predicate on the "ip_address" field.
func IPAddressGT(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldGT(FieldIPAddress, v))
}

// IPAddressGTE applies the GTE predicate on the "ip_address" field.
func IPAddressGTE(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldGTE(FieldIPAddress, v))
}

// IPAddressLT applies the LT predicate on the "ip_address" field.
func IPAddressLT(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldLT(FieldIPAddress, v))
}

// IPAddressLTE applies the LTE predicate on the "ip_address" field.
func IPAddressLTE(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldLTE(FieldIPAddress, v))
}

// IPAddressContains applies the Contains predicate on the "ip_address" field.
func IPAddressContains(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldContains(FieldIPAddress, v))
}

// IPAddressHasPrefix applies the HasPrefix predicate on the "ip_address" field.
func IPAddressHasPrefix(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldHasPrefix(FieldIPAddress, v))
}

// IPAddressHasSuffix applies the HasSuffix predicate on the "ip_address" field.
func IPAddressHasSuffix(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldHasSuffix(FieldIPAddress, v))
}

// IPAddressEqualFold applies the EqualFold predicate on the "ip_address" field.
func IPAddressEqualFold(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldEqualFold(FieldIPAddress, v))
}

// IPAddressContainsFold applies the ContainsFold predicate on the "ip_address" field.
func IPAddressContainsFold(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldContainsFold(FieldIPAddress, v))
}

// SecretEQ applies the EQ predicate on the "secret" field.
func SecretEQ(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldEQ(FieldSecret, v))
}

// SecretNEQ applies the NEQ predicate on the "secret" field.
func SecretNEQ(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldNEQ(FieldSecret, v))
}

// SecretIn applies the In predicate on the "secret" field.
func SecretIn(vs ...string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldIn(FieldSecret, vs...))
}

// SecretNotIn applies the NotIn predicate on the "secret" field.
func SecretNotIn(vs ...string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldNotIn(FieldSecret, vs...))
}

// SecretGT applies the GT predicate on the "secret" field.
func SecretGT(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldGT(FieldSecret, v))
}

// SecretGTE applies the GTE predicate on the "secret" field.
func SecretGTE(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldGTE(FieldSecret, v))
}

// SecretLT applies the LT predicate on the "secret" field.
func SecretLT(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldLT(FieldSecret, v))
}

// SecretLTE applies the LTE predicate on the "secret" field.
func SecretLTE(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldLTE(FieldSecret, v))
}

// SecretContains applies the Contains predicate on the "secret" field.
func SecretContains(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldContains(FieldSecret, v))
}

// SecretHasPrefix applies the HasPrefix predicate on the "secret" field.
func SecretHasPrefix(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldHasPrefix(FieldSecret, v))
}

// SecretHasSuffix applies the HasSuffix predicate on the "secret" field.
func SecretHasSuffix(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldHasSuffix(FieldSecret, v))
}

// SecretEqualFold applies the EqualFold predicate on the "secret" field.
func SecretEqualFold(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldEqualFold(FieldSecret, v))
}

// SecretContainsFold applies the ContainsFold predicate on the "secret" field.
func SecretContainsFold(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldContainsFold(FieldSecret, v))
}

// NextURLEQ applies the EQ predicate on the "next_url" field.
func NextURLEQ(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldEQ(FieldNextURL, v))
}

// NextURLNEQ applies the NEQ predicate on the "next_url" field.
func NextURLNEQ(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldNEQ(FieldNextURL, v))
}

// NextURLIn applies the In predicate on the "next_url" field.
func NextURLIn(vs ...string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldIn(FieldNextURL, vs...))
}

// NextURLNotIn applies the NotIn predicate on the "next_url" field.
func NextURLNotIn(vs ...string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldNotIn(FieldNextURL, vs...))
}

// NextURLGT applies the GT predicate on the "next_url" field.
func NextURLGT(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldGT(FieldNextURL, v))
}

// NextURLGTE applies the GTE predicate on the "next_url" field.
func NextURLGTE(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldGTE(FieldNextURL, v))
}

// NextURLLT applies the LT predicate on the "next_url" field.
func NextURLLT(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldLT(FieldNextURL, v))
}

// NextURLLTE applies the LTE predicate on the "next_url" field.
func NextURLLTE(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldLTE(FieldNextURL, v))
}

// NextURLContains applies the Contains predicate on the "next_url" field.
func NextURLContains(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldContains(FieldNextURL, v))
}

// NextURLHasPrefix applies the HasPrefix predicate on the "next_url" field.
func NextURLHasPrefix(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldHasPrefix(FieldNextURL, v))
}

// NextURLHasSuffix applies the HasSuffix predicate on the "next_url" field.
func NextURLHasSuffix(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldHasSuffix(FieldNextURL, v))
}

// NextURLEqualFold applies the EqualFold predicate on the "next_url" field.
func NextURLEqualFold(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldEqualFold(FieldNextURL, v))
}

// NextURLContainsFold applies the ContainsFold predicate on the "next_url" field.
func NextURLContainsFold(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldContainsFold(FieldNextURL, v))
}

// OrganizationEQ applies the EQ predicate on the "organization" field.
func OrganizationEQ(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldEQ(FieldOrganization, v))
}

// OrganizationNEQ applies the NEQ predicate on the "organization" field.
func OrganizationNEQ(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldNEQ(FieldOrganization, v))
}

// OrganizationIn applies the In predicate on the "organization" field.
func OrganizationIn(vs ...string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldIn(FieldOrganization, vs...))
}

// OrganizationNotIn applies the NotIn predicate on the "organization" field.
func OrganizationNotIn(vs ...string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldNotIn(FieldOrganization, vs...))
}

// OrganizationGT applies the GT predicate on the "organization" field.
func OrganizationGT(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldGT(FieldOrganization, v))
}

// OrganizationGTE applies the GTE predicate on the "organization" field.
func OrganizationGTE(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldGTE(FieldOrganization, v))
}

// OrganizationLT applies the LT predicate on the "organization" field.
func OrganizationLT(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldLT(FieldOrganization, v))
}

// OrganizationLTE applies the LTE predicate on the "organization" field.
func OrganizationLTE(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldLTE(FieldOrganization, v))
}

// OrganizationContains applies the Contains predicate on the "organization" field.
func OrganizationContains(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldContains(FieldOrganization, v))
}

// OrganizationHasPrefix applies the HasPrefix predicate on the "organization" field.
func OrganizationHasPrefix(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldHasPrefix(FieldOrganization, v))
}

// OrganizationHasSuffix applies the HasSuffix predicate on the "organization" field.
func OrganizationHasSuffix(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldHasSuffix(FieldOrganization, v))
}

// OrganizationIsNil applies the IsNil predicate on the "organization" field.
func OrganizationIsNil() predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldIsNull(FieldOrganization))
}

// OrganizationNotNil applies the NotNil predicate on the "organization" field.
func OrganizationNotNil() predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldNotNull(FieldOrganization))
}

// OrganizationEqualFold applies the EqualFold predicate on the "organization" field.
func OrganizationEqualFold(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldEqualFold(FieldOrganization, v))
}

// OrganizationContainsFold applies the ContainsFold predicate on the "organization" field.
func OrganizationContainsFold(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldContainsFold(FieldOrganization, v))
}

// DeviceIdentifierEQ applies the EQ predicate on the "device_identifier" field.
func DeviceIdentifierEQ(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldEQ(FieldDeviceIdentifier, v))
}

// DeviceIdentifierNEQ applies the NEQ predicate on the "device_identifier" field.
func DeviceIdentifierNEQ(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldNEQ(FieldDeviceIdentifier, v))
}

// DeviceIdentifierIn applies the In predicate on the "device_identifier" field.
func DeviceIdentifierIn(vs ...string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldIn(FieldDeviceIdentifier, vs...))
}

// DeviceIdentifierNotIn applies the NotIn predicate on the "device_identifier" field.
func DeviceIdentifierNotIn(vs ...string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldNotIn(FieldDeviceIdentifier, vs...))
}

// DeviceIdentifierGT applies the GT predicate on the "device_identifier" field.
func DeviceIdentifierGT(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldGT(FieldDeviceIdentifier, v))
}

// DeviceIdentifierGTE applies the GTE predicate on the "device_identifier" field.
func DeviceIdentifierGTE(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldGTE(FieldDeviceIdentifier, v))
}

// DeviceIdentifierLT applies the LT predicate on the "device_identifier" field.
func DeviceIdentifierLT(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldLT(FieldDeviceIdentifier, v))
}

// DeviceIdentifierLTE applies the LTE predicate on the "device_identifier" field.
func DeviceIdentifierLTE(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldLTE(FieldDeviceIdentifier, v))
}

// DeviceIdentifierContains applies the Contains predicate on the "device_identifier" field.
func DeviceIdentifierContains(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldContains(FieldDeviceIdentifier, v))
}

// DeviceIdentifierHasPrefix applies the HasPrefix predicate on the "device_identifier" field.
func DeviceIdentifierHasPrefix(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldHasPrefix(FieldDeviceIdentifier, v))
}

// DeviceIdentifierHasSuffix applies the HasSuffix predicate on the "device_identifier" field.
func DeviceIdentifierHasSuffix(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldHasSuffix(FieldDeviceIdentifier, v))
}

// DeviceIdentifierIsNil applies the IsNil predicate on the "device_identifier" field.
func DeviceIdentifierIsNil() predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldIsNull(FieldDeviceIdentifier))
}

// DeviceIdentifierNotNil applies the NotNil predicate on the "device_identifier" field.
func DeviceIdentifierNotNil() predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldNotNull(FieldDeviceIdentifier))
}

// DeviceIdentifierEqualFold applies the EqualFold predicate on the "device_identifier" field.
func DeviceIdentifierEqualFold(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldEqualFold(FieldDeviceIdentifier, v))
}

// DeviceIdentifierContainsFold applies the ContainsFold predicate on the "device_identifier" field.
func DeviceIdentifierContainsFold(v string) predicate.MagicFlow {
	return predicate.MagicFlow(sql.FieldContainsFold(FieldDeviceIdentifier, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.MagicFlow) predicate.MagicFlow {
	return predicate.MagicFlow(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.MagicFlow) predicate.MagicFlow {
	return predicate.MagicFlow(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.MagicFlow) predicate.MagicFlow {
	return predicate.MagicFlow(func(s *sql.Selector) {
		p(s.Not())
	})
}
