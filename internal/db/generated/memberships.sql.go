// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: memberships.sql

package generated

import (
	"context"
)

const getMembershipByUserIdentifierAndOrganizationIdentifier = `-- name: GetMembershipByUserIdentifierAndOrganizationIdentifier :one
SELECT user_identifier, organization_identifier, role, created_at
FROM memberships
WHERE user_identifier = ?
  AND organization_identifier = ? LIMIT 1
`

type GetMembershipByUserIdentifierAndOrganizationIdentifierParams struct {
	UserIdentifier         string
	OrganizationIdentifier string
}

func (q *Queries) GetMembershipByUserIdentifierAndOrganizationIdentifier(ctx context.Context, arg GetMembershipByUserIdentifierAndOrganizationIdentifierParams) (Membership, error) {
	row := q.db.QueryRowContext(ctx, getMembershipByUserIdentifierAndOrganizationIdentifier, arg.UserIdentifier, arg.OrganizationIdentifier)
	var i Membership
	err := row.Scan(
		&i.UserIdentifier,
		&i.OrganizationIdentifier,
		&i.Role,
		&i.CreatedAt,
	)
	return i, err
}
