// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: session_revocations.sql

package generated

import (
	"context"
	"time"
)

const createSessionRevocation = `-- name: CreateSessionRevocation :exec
INSERT INTO session_revocations (session_identifier, expires_at, created_at)
VALUES (?, ?, CURRENT_TIMESTAMP)
`

type CreateSessionRevocationParams struct {
	SessionIdentifier string
	ExpiresAt         time.Time
}

func (q *Queries) CreateSessionRevocation(ctx context.Context, arg CreateSessionRevocationParams) error {
	_, err := q.db.ExecContext(ctx, createSessionRevocation, arg.SessionIdentifier, arg.ExpiresAt)
	return err
}

const deleteExpiredSessionRevocations = `-- name: DeleteExpiredSessionRevocations :execrows
DELETE
FROM session_revocations
WHERE expires_at <= NOW()
`

func (q *Queries) DeleteExpiredSessionRevocations(ctx context.Context) (int64, error) {
	result, err := q.db.ExecContext(ctx, deleteExpiredSessionRevocations)
	if err != nil {
		return 0, err
	}
	return result.RowsAffected()
}
