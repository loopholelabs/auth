/*
	Copyright 2023 Loophole Labs

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

		   http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
*/

// Code generated by go-swagger; DO NOT EDIT.

package google

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetGoogleCallbackReader is a Reader for the GetGoogleCallback structure.
type GetGoogleCallbackReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGoogleCallbackReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 307:
		result := NewGetGoogleCallbackTemporaryRedirect()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetGoogleCallbackUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGoogleCallbackForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGoogleCallbackNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGoogleCallbackInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGoogleCallbackTemporaryRedirect creates a GetGoogleCallbackTemporaryRedirect with default headers values
func NewGetGoogleCallbackTemporaryRedirect() *GetGoogleCallbackTemporaryRedirect {
	return &GetGoogleCallbackTemporaryRedirect{}
}

/*
GetGoogleCallbackTemporaryRedirect describes a response with status code 307, with default header values.

Temporary Redirect
*/
type GetGoogleCallbackTemporaryRedirect struct {

	/* Redirects to Next URL
	 */
	Location string
}

// IsSuccess returns true when this get google callback temporary redirect response has a 2xx status code
func (o *GetGoogleCallbackTemporaryRedirect) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get google callback temporary redirect response has a 3xx status code
func (o *GetGoogleCallbackTemporaryRedirect) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get google callback temporary redirect response has a 4xx status code
func (o *GetGoogleCallbackTemporaryRedirect) IsClientError() bool {
	return false
}

// IsServerError returns true when this get google callback temporary redirect response has a 5xx status code
func (o *GetGoogleCallbackTemporaryRedirect) IsServerError() bool {
	return false
}

// IsCode returns true when this get google callback temporary redirect response a status code equal to that given
func (o *GetGoogleCallbackTemporaryRedirect) IsCode(code int) bool {
	return code == 307
}

// Code gets the status code for the get google callback temporary redirect response
func (o *GetGoogleCallbackTemporaryRedirect) Code() int {
	return 307
}

func (o *GetGoogleCallbackTemporaryRedirect) Error() string {
	return fmt.Sprintf("[GET /google/callback][%d] getGoogleCallbackTemporaryRedirect ", 307)
}

func (o *GetGoogleCallbackTemporaryRedirect) String() string {
	return fmt.Sprintf("[GET /google/callback][%d] getGoogleCallbackTemporaryRedirect ", 307)
}

func (o *GetGoogleCallbackTemporaryRedirect) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Location
	hdrLocation := response.GetHeader("Location")

	if hdrLocation != "" {
		o.Location = hdrLocation
	}

	return nil
}

// NewGetGoogleCallbackUnauthorized creates a GetGoogleCallbackUnauthorized with default headers values
func NewGetGoogleCallbackUnauthorized() *GetGoogleCallbackUnauthorized {
	return &GetGoogleCallbackUnauthorized{}
}

/*
GetGoogleCallbackUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetGoogleCallbackUnauthorized struct {
	Payload string
}

// IsSuccess returns true when this get google callback unauthorized response has a 2xx status code
func (o *GetGoogleCallbackUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get google callback unauthorized response has a 3xx status code
func (o *GetGoogleCallbackUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get google callback unauthorized response has a 4xx status code
func (o *GetGoogleCallbackUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get google callback unauthorized response has a 5xx status code
func (o *GetGoogleCallbackUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get google callback unauthorized response a status code equal to that given
func (o *GetGoogleCallbackUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get google callback unauthorized response
func (o *GetGoogleCallbackUnauthorized) Code() int {
	return 401
}

func (o *GetGoogleCallbackUnauthorized) Error() string {
	return fmt.Sprintf("[GET /google/callback][%d] getGoogleCallbackUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGoogleCallbackUnauthorized) String() string {
	return fmt.Sprintf("[GET /google/callback][%d] getGoogleCallbackUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGoogleCallbackUnauthorized) GetPayload() string {
	return o.Payload
}

func (o *GetGoogleCallbackUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGoogleCallbackForbidden creates a GetGoogleCallbackForbidden with default headers values
func NewGetGoogleCallbackForbidden() *GetGoogleCallbackForbidden {
	return &GetGoogleCallbackForbidden{}
}

/*
GetGoogleCallbackForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetGoogleCallbackForbidden struct {
	Payload string
}

// IsSuccess returns true when this get google callback forbidden response has a 2xx status code
func (o *GetGoogleCallbackForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get google callback forbidden response has a 3xx status code
func (o *GetGoogleCallbackForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get google callback forbidden response has a 4xx status code
func (o *GetGoogleCallbackForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get google callback forbidden response has a 5xx status code
func (o *GetGoogleCallbackForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get google callback forbidden response a status code equal to that given
func (o *GetGoogleCallbackForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get google callback forbidden response
func (o *GetGoogleCallbackForbidden) Code() int {
	return 403
}

func (o *GetGoogleCallbackForbidden) Error() string {
	return fmt.Sprintf("[GET /google/callback][%d] getGoogleCallbackForbidden  %+v", 403, o.Payload)
}

func (o *GetGoogleCallbackForbidden) String() string {
	return fmt.Sprintf("[GET /google/callback][%d] getGoogleCallbackForbidden  %+v", 403, o.Payload)
}

func (o *GetGoogleCallbackForbidden) GetPayload() string {
	return o.Payload
}

func (o *GetGoogleCallbackForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGoogleCallbackNotFound creates a GetGoogleCallbackNotFound with default headers values
func NewGetGoogleCallbackNotFound() *GetGoogleCallbackNotFound {
	return &GetGoogleCallbackNotFound{}
}

/*
GetGoogleCallbackNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetGoogleCallbackNotFound struct {
	Payload string
}

// IsSuccess returns true when this get google callback not found response has a 2xx status code
func (o *GetGoogleCallbackNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get google callback not found response has a 3xx status code
func (o *GetGoogleCallbackNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get google callback not found response has a 4xx status code
func (o *GetGoogleCallbackNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get google callback not found response has a 5xx status code
func (o *GetGoogleCallbackNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get google callback not found response a status code equal to that given
func (o *GetGoogleCallbackNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get google callback not found response
func (o *GetGoogleCallbackNotFound) Code() int {
	return 404
}

func (o *GetGoogleCallbackNotFound) Error() string {
	return fmt.Sprintf("[GET /google/callback][%d] getGoogleCallbackNotFound  %+v", 404, o.Payload)
}

func (o *GetGoogleCallbackNotFound) String() string {
	return fmt.Sprintf("[GET /google/callback][%d] getGoogleCallbackNotFound  %+v", 404, o.Payload)
}

func (o *GetGoogleCallbackNotFound) GetPayload() string {
	return o.Payload
}

func (o *GetGoogleCallbackNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGoogleCallbackInternalServerError creates a GetGoogleCallbackInternalServerError with default headers values
func NewGetGoogleCallbackInternalServerError() *GetGoogleCallbackInternalServerError {
	return &GetGoogleCallbackInternalServerError{}
}

/*
GetGoogleCallbackInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetGoogleCallbackInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this get google callback internal server error response has a 2xx status code
func (o *GetGoogleCallbackInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get google callback internal server error response has a 3xx status code
func (o *GetGoogleCallbackInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get google callback internal server error response has a 4xx status code
func (o *GetGoogleCallbackInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get google callback internal server error response has a 5xx status code
func (o *GetGoogleCallbackInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get google callback internal server error response a status code equal to that given
func (o *GetGoogleCallbackInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get google callback internal server error response
func (o *GetGoogleCallbackInternalServerError) Code() int {
	return 500
}

func (o *GetGoogleCallbackInternalServerError) Error() string {
	return fmt.Sprintf("[GET /google/callback][%d] getGoogleCallbackInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGoogleCallbackInternalServerError) String() string {
	return fmt.Sprintf("[GET /google/callback][%d] getGoogleCallbackInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGoogleCallbackInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *GetGoogleCallbackInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
