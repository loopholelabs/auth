/*
 	Copyright 2023 Loophole Labs

 	Licensed under the Apache License, Version 2.0 (the "License");
 	you may not use this file except in compliance with the License.
 	You may obtain a copy of the License at

 		   http://www.apache.org/licenses/LICENSE-2.0

 	Unless required by applicable law or agreed to in writing, software
 	distributed under the License is distributed on an "AS IS" BASIS,
 	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 	See the License for the specific language governing permissions and
 	limitations under the License.
*/

// Code generated by go-swagger; DO NOT EDIT.

package device

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostDevicePollParams creates a new PostDevicePollParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostDevicePollParams() *PostDevicePollParams {
	return &PostDevicePollParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostDevicePollParamsWithTimeout creates a new PostDevicePollParams object
// with the ability to set a timeout on a request.
func NewPostDevicePollParamsWithTimeout(timeout time.Duration) *PostDevicePollParams {
	return &PostDevicePollParams{
		timeout: timeout,
	}
}

// NewPostDevicePollParamsWithContext creates a new PostDevicePollParams object
// with the ability to set a context for a request.
func NewPostDevicePollParamsWithContext(ctx context.Context) *PostDevicePollParams {
	return &PostDevicePollParams{
		Context: ctx,
	}
}

// NewPostDevicePollParamsWithHTTPClient creates a new PostDevicePollParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostDevicePollParamsWithHTTPClient(client *http.Client) *PostDevicePollParams {
	return &PostDevicePollParams{
		HTTPClient: client,
	}
}

/*
PostDevicePollParams contains all the parameters to send to the API endpoint

	for the post device poll operation.

	Typically these are written to a http.Request.
*/
type PostDevicePollParams struct {

	/* Code.

	   user code
	*/
	Code string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post device poll params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostDevicePollParams) WithDefaults() *PostDevicePollParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post device poll params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostDevicePollParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post device poll params
func (o *PostDevicePollParams) WithTimeout(timeout time.Duration) *PostDevicePollParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post device poll params
func (o *PostDevicePollParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post device poll params
func (o *PostDevicePollParams) WithContext(ctx context.Context) *PostDevicePollParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post device poll params
func (o *PostDevicePollParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post device poll params
func (o *PostDevicePollParams) WithHTTPClient(client *http.Client) *PostDevicePollParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post device poll params
func (o *PostDevicePollParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCode adds the code to the post device poll params
func (o *PostDevicePollParams) WithCode(code string) *PostDevicePollParams {
	o.SetCode(code)
	return o
}

// SetCode adds the code to the post device poll params
func (o *PostDevicePollParams) SetCode(code string) {
	o.Code = code
}

// WriteToRequest writes these params to a swagger request
func (o *PostDevicePollParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param code
	qrCode := o.Code
	qCode := qrCode
	if qCode != "" {

		if err := r.SetQueryParam("code", qCode); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
