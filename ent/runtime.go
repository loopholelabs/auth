/*
	Copyright 2022 Loophole Labs

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

		   http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
*/

// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/loopholelabs/auth/ent/githubflow"
	"github.com/loopholelabs/auth/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	githubflowFields := schema.GithubFlow{}.Fields()
	_ = githubflowFields
	// githubflowDescCreatedAt is the schema descriptor for created_at field.
	githubflowDescCreatedAt := githubflowFields[0].Descriptor()
	// githubflow.DefaultCreatedAt holds the default value on creation for the created_at field.
	githubflow.DefaultCreatedAt = githubflowDescCreatedAt.Default.(func() time.Time)
	// githubflowDescState is the schema descriptor for state field.
	githubflowDescState := githubflowFields[1].Descriptor()
	// githubflow.StateValidator is a validator for the "state" field. It is called by the builders before save.
	githubflow.StateValidator = githubflowDescState.Validators[0].(func(string) error)
	// githubflowDescOrganization is the schema descriptor for organization field.
	githubflowDescOrganization := githubflowFields[2].Descriptor()
	// githubflow.OrganizationValidator is a validator for the "organization" field. It is called by the builders before save.
	githubflow.OrganizationValidator = githubflowDescOrganization.Validators[0].(func(string) error)
	// githubflowDescVerifier is the schema descriptor for verifier field.
	githubflowDescVerifier := githubflowFields[3].Descriptor()
	// githubflow.VerifierValidator is a validator for the "verifier" field. It is called by the builders before save.
	githubflow.VerifierValidator = githubflowDescVerifier.Validators[0].(func(string) error)
	// githubflowDescChallenge is the schema descriptor for challenge field.
	githubflowDescChallenge := githubflowFields[4].Descriptor()
	// githubflow.ChallengeValidator is a validator for the "challenge" field. It is called by the builders before save.
	githubflow.ChallengeValidator = githubflowDescChallenge.Validators[0].(func(string) error)
}
